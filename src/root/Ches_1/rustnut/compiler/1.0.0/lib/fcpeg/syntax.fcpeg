[Main]{
    + use Syntax,
    + start Syntax.Main,
}

[Syntax]{
    + use FileItem,
    + use Misc.Symbol as Symbol,

    Main <- Symbol.Space*# Symbol.LineEnd*# FileItem.Item*## Symbol.Space*# "\z"#,
}

[FileItem]{
    + use Block,
    + use Expr.DataType as DataType,
    + use Misc.Misc as Misc,
    + use Misc.Symbol as Symbol,

    Item <- Symbol.Space*# (StructItem : TraitItem : EnumItem)## Block.BlockEnd#,

    NormalFieldItem($Name) <- Symbol.Space*# (Misc.PubAccessRange Symbol.Space+#)?## $Name# Symbol.Space+# DataType.Type Symbol.LineEnd+# Block.BlockList,
    StructItem <- NormalFieldItem("struct")##,
    TraitItem <- NormalFieldItem("trait")##,

    EnumItem <- Symbol.Space*# (Misc.PubAccessRange Symbol.Space+#)?## "enum"# Symbol.Space+# Misc.ID EnumItemTypeParameter?## Symbol.LineEnd+# Block.BlockList,
    EnumItemTypeParameter <- Symbol.Space+# DataType.Type,
}

[Block]{
    + use Block,
    + use Expr.DataType as DataType,
    + use Expr.Expr as Expr,
    + use Method,
    + use Misc.Symbol as Symbol,
    + use Misc.Misc as Misc,

    BlockEnd <- Symbol.Space*# "end"# Symbol.LineEnd+#,

    BlockList <- (DataBlock<StructFieldDef> : ImplBlock)*##,
    DataBlock<$FieldDef> <- Symbol.Space*# "data"# Symbol.LineEnd+# $FieldDef* BlockEnd#,

    StructFieldDef <- Symbol.Space*# (Misc.PubAccessRange Symbol.Space+#)?## Misc.ID Symbol.Space+# DataType.Type Symbol.LineEnd+#,
    EnumFieldDef <- Symbol.Space*# (Misc.PubAccessRange Symbol.Space+#)?## Misc.ID (Symbol.Space*# "=" Symbol.Space*# Expr.GeneralExpr)? Symbol.LineEnd+#,

    ImplBlock <- Symbol.Space*# "impl"# BlockTypeParameter?## Symbol.LineEnd+# (Method.MethodDef*)#MethodDefList Block.BlockEnd#,
    BlockTypeParameter <- Symbol.Space+# DataType.Type,
}

[Method]{
    + use Block,
    + use Expr.DataType as DataType,
    + use Expr.Expr as Expr,
    + use Expr.Func as Func,
    + use Misc.Misc as Misc,
    + use Misc.Symbol as Symbol,

    MethodDef <- MethodDefStart## (Symbol.Space*# Expr.GeneralExpr Symbol.Space* Symbol.LineEnd+#)*#ExpressionList Block.BlockEnd#,
    MethodDefStart <- Symbol.Space*# (Misc.PubAccessRange Symbol.Space+#)?## Func.DefAbs? "fn"# Symbol.Space+# Func.Name Symbol.Space*# "("# DefArgDyn? Symbol.Space*# DefArgs? Symbol.Space*# ")"# Symbol.Space*# DataType.Type? Symbol.LineEnd+#,

    DefArgs <- DefArgElem (Symbol.Space*# ","# Symbol.Space*# DefArgElem)*##,
    DefArgDyn <- Func.ArgMut? "self"# Symbol.Space*# "|"# Symbol.Space*#,
    DefArgElem <- Func.ArgMut? Func.ArgRef? Misc.ID Symbol.Space+# DataType.Type,
}
