[Main]{
    + use Syntax,
    + start Syntax.Main,
}

[Syntax]{
    + use FileItem,
    + use Misc.Symbol as Symbol,

    + use Expr.DataType as DataType,
    %+ use Symbol.Symbol as Symbol,
    + use Misc.Misc as Misc,
    Main <- Symbol.Space*# Symbol.LineEnd*# FileItem.Item Symbol.Space*#,
}

[FileItem]{
    + use DataBlock,
    + use Expr.DataType as DataType,
    + use ImplBlock,
    + use Misc.Misc as Misc,
    + use Misc.Symbol as Symbol,

    Item <- Symbol.Space*# (Struct : Trait : Enum : Macro),
    % note: 先頭の行終了を強制するため最初に LineEnd+ を置く,
    Struct <- "struct"# Symbol.Space+# DataType.Type Symbol.LineEnd+# ((DataBlock.NormalBlock : ImplBlock.Block))*,
    Trait <- "trait"# Symbol.Space+# DataType.Type Symbol.LineEnd+# ((DataBlock.NormalBlock : ImplBlock.Block))*,
    Enum <- "enum"# Symbol.Space+# Misc.ID (Symbol.Space+# DataType.Type)? Symbol.LineEnd+# ((DataBlock.EnumBlock : ImplBlock.Block))*,
    Macro <- "macro"#,
}

[DataBlock]{
    + use Expr.DataType as DataType,
    + use Expr.Literal as Literal,
    + use Misc.Symbol as Symbol,
    + use Misc.Misc as Misc,

    BlockStart <- Symbol.Space*# "data" Symbol.LineEnd+#,
    BlockEnd <- Symbol.Space*# "end"# Symbol.LineEnd+#,

    NormalBlock <- BlockStart NormalFieldDef* BlockEnd,
    EnumBlock <- BlockStart EnumFieldDef* BlockEnd,

    NormalFieldDef <- Symbol.Space*# Misc.ID Symbol.Space+# DataType.Type Symbol.LineEnd+#,
    EnumFieldDef <- Symbol.Space*# Misc.ID ((Symbol.Space*# "=" Symbol.Space*# Literal.Literal))? Symbol.LineEnd+#,
}

[ImplBlock]{
    Block <- "impl",
}
