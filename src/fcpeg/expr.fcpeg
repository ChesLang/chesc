[Expr]{
    Expr <- "expr",
}

[DataType]{
    + use Misc.Misc as Misc,
    + use Misc.Symbol as Symbol,

    % note: 最後にスペースの付かないジェネリクス対応の型,
    Type <- GenType : SimpleType,
    % note: 最後に n 回以上のスペースが付いたジェネリクス対応の型,
    TypeWithSpace <- GenType Symbol.Space* : SimpleType Symbol.Space+,

    % note: 通常の型,
    SimpleType <- Misc.ID,
    % note: ジェネリクス型,
    GenType <- SimpleType Symbol.Space*# "<"# Symbol.Space*# (GenType : SimpleType) Symbol.Space*# (","# Symbol.Space*# (GenType : SimpleType))* Symbol.Space*# ">"#,

    BuiltInNumType <- "s8" : "u8" : "s16" : "s16" : "s32" : "u32" : "s64" : "u64" : "f32" : "f64",
}

[Literal]{
    + use DataType,

    Literal <- Bool : Num : Char : Str,
    Bool <- "true" : "false",
    Num <- [0-9]+ ("." [0-9]+)? DataType.BuiltInNumType?,
    EscSeq <- "\\" ("\\" : "0" : "'" : "\"" : "b" : "n" : "u"),
    Char <- "'" (!"\\\"" EscSeq : !"'" .) "'",
    Str <- "\"" ((!"\\'" EscSeq : !(("\\" : "\"")) .))* "\"" : "r\"" ((!"\"" .))* "\"",
}
